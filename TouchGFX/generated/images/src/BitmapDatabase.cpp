// 4.23.2 0x0bf05c94
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_boxprogress_normal_small[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_SMALL_ID = 0, Size: 200x10 pixels
extern const unsigned char image_battery[]; // BITMAP_BATTERY_ID = 1, Size: 32x32 pixels
extern const unsigned char image_bolt[]; // BITMAP_BOLT_ID = 2, Size: 32x32 pixels
extern const unsigned char image_engine_coolant[]; // BITMAP_ENGINE_COOLANT_ID = 3, Size: 32x32 pixels
extern const unsigned char image_hot_water[]; // BITMAP_HOT_WATER_ID = 4, Size: 32x32 pixels
extern const unsigned char image_icon_theme_images_alert_error_outline_29_29_666666_svg[]; // BITMAP_ICON_THEME_IMAGES_ALERT_ERROR_OUTLINE_29_29_666666_SVG_ID = 5, Size: 29x29 pixels
extern const unsigned char image_icon_theme_images_av_volume_off_32_32_666666_svg[]; // BITMAP_ICON_THEME_IMAGES_AV_VOLUME_OFF_32_32_666666_SVG_ID = 6, Size: 32x32 pixels
extern const unsigned char image_icon_theme_images_content_clear_32_32_666666_svg[]; // BITMAP_ICON_THEME_IMAGES_CONTENT_CLEAR_32_32_666666_SVG_ID = 7, Size: 32x32 pixels
extern const unsigned char image_pressure_gauge[]; // BITMAP_PRESSURE_GAUGE_ID = 8, Size: 32x32 pixels
extern const unsigned char image_water_gauge[]; // BITMAP_WATER_GAUGE_ID = 9, Size: 32x32 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_boxprogress_normal_small, 0, 200, 10, 0, 0, 200, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_battery, 0, 32, 32, 4, 18, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bolt, 0, 32, 32, 12, 11, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_engine_coolant, 0, 32, 32, 15, 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 22, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hot_water, 0, 32, 32, 20, 6, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_theme_images_alert_error_outline_29_29_666666_svg, 0, 29, 29, 14, 9, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 7, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_theme_images_av_volume_off_32_32_666666_svg, 0, 32, 32, 13, 14, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_theme_images_content_clear_32_32_666666_svg, 0, 32, 32, 14, 14, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_pressure_gauge, 0, 32, 32, 22, 22, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_water_gauge, 0, 32, 32, 24, 9, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
